<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++反汇编特征记录</title>
      <link href="/posts/8d38ffae/"/>
      <url>/posts/8d38ffae/</url>
      
        <content type="html"><![CDATA[<p>#1. 三目运算符</p><h2 id="1-1-无优化版："><a href="#1-1-无优化版：" class="headerlink" title="1.1 无优化版："></a>1.1 无优化版：</h2><ul><li>特征：<pre class=" language-xxx1"><code class="language-xxx1">cmp xxx1,Ajxx xxx3xxx B xxjmp xxx4xx C xx</code></pre></li><li>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-16-52-53.png" alt=""><h2 id="1-2-优化方案1："><a href="#1-2-优化方案1：" class="headerlink" title="1.2 优化方案1："></a>1.2 优化方案1：</h2></li><li>特征：表达式1为简单比较，而表达式2和表达3两者的差值等于1；<pre><code>setne al</code></pre></li><li>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-16-30-23.png" alt=""></li></ul><h2 id="1-3-优化方案2："><a href="#1-3-优化方案2：" class="headerlink" title="1.3 优化方案2："></a>1.3 优化方案2：</h2><ul><li>特征： xxx1 == A? B:C<pre><code>cmp xxx1, Amov xxx3， Bmov xxx4, Ccmovcc xxx3, xxx4</code></pre></li><li>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-16-47-25.png" alt=""></li></ul><h1 id="2-if…else…语句"><a href="#2-if…else…语句" class="headerlink" title="2. if…else…语句"></a>2. if…else…语句</h1><h2 id="2-1-if单分支，无优化"><a href="#2-1-if单分支，无优化" class="headerlink" title="2.1 if单分支，无优化"></a>2.1 if单分支，无优化</h2><ul><li><p>特征：if（A） { B }</p><pre><code>  cmp A  jxx  B_end  B</code></pre></li><li><p>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-17-00-07.png" alt=""></p><h2 id="2-1-if-else双分支，无优化"><a href="#2-1-if-else双分支，无优化" class="headerlink" title="2.1 if..else双分支，无优化"></a>2.1 if..else双分支，无优化</h2></li><li><p>特征：if（A） { B } else {C}</p><pre><code>  jxx ELSE_BEGIN；该地址为else语句块的首地址  IF_BEGIN：  ……；if语句块内的执行代码  IF_END：  jmp ELSE_END；跳转到else语句块的结束地址  ELSE_BEGIN：  ……；else语句块内的执行代码  ELSE_END：</code></pre></li><li><p>实例：<br>  <img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-17-04-54.png" alt=""></p><h2 id="2-3-if-else-if…else-多分支，无优化"><a href="#2-3-if-else-if…else-多分支，无优化" class="headerlink" title="2.3 if..else if…else 多分支，无优化"></a>2.3 if..else if…else 多分支，无优化</h2></li><li><p>特征：</p><pre><code>  cmp；会影响标志位的指令  jxx ELSE_IF_BEGIN；跳转到下一条else if语句块的首地址  IF_BEGIN：  ……；if语句块内的执行代码  IF_END：  jmp END；跳转到多分支结构的结尾地址  ELSE_IF_BEGIN：；else if语句块的起始地址  ；可影响标志位的指令  jxx ELSE_BEGIN；跳转到else分支语句块的首地址  ……；else if语句块内的执行代码  IF_ELSE_END：；else if结尾处  jmp END；跳转到多分支结构的结尾地址  ELSE_BEGIN：；else语句块的起始地址  ……；else语句块内的执行代码  END：；多分支结构的结尾处  ……</code></pre></li><li><p>实例：<br>  <img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-17-13-42.png" alt=""></p></li></ul><h2 id="2-4-if-多分支语句优化版："><a href="#2-4-if-多分支语句优化版：" class="headerlink" title="2.4 if 多分支语句优化版："></a>2.4 if 多分支语句优化版：</h2><ul><li>特征： <ul><li>使用test 代替cmp</li><li>尽量削减分支</li></ul></li><li>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-17-22-35.png" alt=""></li></ul><h1 id="3-Switch语句"><a href="#3-Switch语句" class="headerlink" title="3 Switch语句"></a>3 Switch语句</h1><h2 id="3-1-switch只有三条分支无优化版"><a href="#3-1-switch只有三条分支无优化版" class="headerlink" title="3.1 switch只有三条分支无优化版"></a>3.1 switch只有三条分支无优化版</h2><ul><li><p>特征：</p><pre><code>  mov reg, mem；取出switch中考察的变量  ；影响标志位的指令  jxx xxxx；跳转到对应case语句块的首地址处  ；影响标志位的指令  jxx xxxx  ；影响标志位的指令  jxx xxxx  jmp END；跳转到switch的结尾地址处  ……；case语句块的首地址  jmp END；case语句块结束，有break则产生这个jmp  ……；case语句块的首地址  jmp END；case语句块的结束，有break则产生这个jmp  ……；case语句块的首地址  jmp END；case语句块结束，有break则产生这个jmp  END：；switch结尾</code></pre></li><li><p>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-17-29-35.png" alt=""></p></li><li><p>注意：</p><ul><li>这种情况下switch和if…else if…else的区别。<h1 id="其他特征"><a href="#其他特征" class="headerlink" title="其他特征"></a>其他特征</h1><h2 id="1-进入函数，判断参数是否为0"><a href="#1-进入函数，判断参数是否为0" class="headerlink" title="1. 进入函数，判断参数是否为0"></a>1. 进入函数，判断参数是否为0</h2></li></ul></li><li><p>特征：</p><pre><code>  test xxx,xxx  je xxx</code></pre></li><li><p>实例：<br><img src="../../img/C-%E5%8F%8D%E6%B1%87%E7%BC%96/C-%E5%8F%8D%E6%B1%87%E7%BC%96_2021-02-02-15-27-15.png" alt=""></p></li><li><p>注意：这是编译器进行速度优化（/O2）后的写法，不优化版是直接使用cmp对比</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何创建一个Task</title>
      <link href="/posts/3add8ad6/"/>
      <url>/posts/3add8ad6/</url>
      
        <content type="html"><![CDATA[<h2 id="Step-1-创建task需要的相关文件"><a href="#Step-1-创建task需要的相关文件" class="headerlink" title="Step 1: 创建task需要的相关文件"></a>Step 1: 创建task需要的相关文件</h2><ul><li><p>在<code>planning/tasks</code>中的decider或者optimizer中创建对应的task目录，如<code>abreast_decider</code>.</p></li><li><p>新建源文件，如<code>abreast_decider.cc</code>和<code>abreast_decider.h</code></p><p>  abreast_decider.cc模板:</p><pre><code>  #include &quot;modules/planning/tasks/deciders/abreast_decider/abreast_decider.h&quot;  namespace apollo  {  namespace planning  {  using apollo::common::Status;  AbreastDecider::AbreastDecider(const TaskConfig &amp;config)      : Decider(config)  {      SetName(&quot;AbreastDecider&quot;);  }</code></pre></li></ul><pre><code>Status AbreastDecider::Process(    Frame *const frame, ReferenceLineInfo *const reference_line_info){    return Status::OK();}}}```---abreast_decider.h模板:```#ifndef __REINFORCEMENT_LEARNING_DECIDER_H#define __REINFORCEMENT_LEARNING_DECIDER_H#include &quot;modules/planning/proto/decider_config.pb.h&quot;#include &quot;modules/planning/tasks/deciders/decider.h&quot;#include &quot;modules/planning/common/planning_gflags.h&quot;namespace apollo{namespace planning{class AbreastDecider : public Decider{public:    explicit AbreastDecider(const TaskConfig &amp;config);private:    common::Status Process(Frame *frame,                        ReferenceLineInfo *reference_line_info) override;};} // namespace planning} // namespace apollo#endif```</code></pre><ul><li><p>新建<code>BUILD</code>文件，用于Bazel编译使用。如下</p><pre><code>  load(&quot;//tools:cpplint.bzl&quot;, &quot;cpplint&quot;)  package(default_visibility = [&quot;//visibility:public&quot;])  cc_library(      name = &quot;abreast_decider&quot;,      srcs = [          &quot;abreast_decider.cc&quot;,      ],      hdrs = [          &quot;abreast_decider.h&quot;,      ],      copts = [&quot;-DMODULE_NAME=\\\&quot;planning\\\&quot;&quot;],      deps = [          &quot;//modules/planning/tasks/deciders:decider&quot;,          &quot;//modules/planning/common:planning_gflags&quot;,          &quot;//modules/planning/common:reference_line_info&quot;,      ],  )  cpplint()</code></pre></li></ul><h2 id="Step-2-注册task"><a href="#Step-2-注册task" class="headerlink" title="Step 2: 注册task"></a>Step 2: 注册task</h2><ul><li><p>在<code>task_factory.cc</code>中保护对应的头文件，如：</p><pre><code>  #include &quot;modules/planning/tasks/deciders/abreast_decider/abreast_decider.h&quot;</code></pre></li><li><p>注册task进task_factory中。其中修改<code>ABREAST_DECIDER</code>——这是你在planning conf里面调用的名字；<code>AbreastDecider</code>是在你的task源文件中定义的decider类的名字。</p><pre><code>  task_factory_.Register(TaskConfig::ABREAST_DECIDER,                          [](const TaskConfig&amp; config) -&gt; Task* {                          return new AbreastDecider(config);                          });</code></pre></li><li><p>给task_factory 添加依赖。修改<code>modules/planning/tasks/BUILD</code>，给cc_library/deps添加<code>abreast_decider</code>的依赖。如下</p><pre><code>cc_library(  name = &quot;task_factory&quot;,  srcs = [      &quot;task_factory.cc&quot;,  ],  hdrs = [      &quot;task_factory.h&quot;,  ],  copts = [&quot;-DMODULE_NAME=\\\&quot;planning\\\&quot;&quot;],  deps = [      &quot;:task&quot;,      ...省略...      &quot;//modules/planning/tasks/deciders/abreast_decider:abreast_decider&quot;,      ...省略...  ],  )</code></pre></li></ul><h2 id="添加task-config"><a href="#添加task-config" class="headerlink" title="添加task config"></a>添加task config</h2><ul><li><p>在<code>modules/planning/proto</code>中创建<code>abreast_decider_config.proto</code>文件。如：</p><pre><code>  syntax = &quot;proto2&quot;;  package apollo.planning;  message AbreastDeciderConfig {  optional double abreast_time = 1;  optional double lateral_area = 2;  optional double longitudinal_area = 3;  }</code></pre></li><li><p>生成<code>proto_library</code>。在<code>modules/planning/proto/BUILD</code>中生成对应的<code>proto_library</code>.如：</p><pre><code>  proto_library(      name = &quot;abreast_decider_config_lib&quot;,      srcs = [          &quot;abreast_decider.proto&quot;,      ],  )</code></pre></li><li><p>在<code>proto_library</code>中添加依赖。如下：</p><pre><code>  proto_library(      name = &quot;planning_config_proto_lib&quot;,      srcs = [          &quot;planning_config.proto&quot;,      ],      deps = [          ...省略...          &quot;:abreast_decider_config_lib&quot;      ],  )</code></pre></li><li><p>在<code>planning_config.pb.txt</code>中添加默认配置。</p><pre><code>  default_task_config: {  task_type: ABREAST_DECIDER  abreast_decider_config {      abreast_time: 60.0      lateral_area: 2.0      longitudinal_area: 10.0  }  }</code></pre></li><li><p>在<code>modules/planning/proto/planning_config.proto</code>中添加相关的task信息</p><ul><li><code>import &quot;modules/planning/proto/abreast_decider_config.proto&quot;</code></li><li>添加<code>TaskType</code>： ABREAST_DECIDER = 22</li><li>添加<code>task_config</code>： AbreastDeciderConfig abreast_decider_config = 18;</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于路径规划的一些想法</title>
      <link href="/posts/baea0bd9/"/>
      <url>/posts/baea0bd9/</url>
      
        <content type="html"><![CDATA[<h1 id="传统方法的一些瓶颈"><a href="#传统方法的一些瓶颈" class="headerlink" title="传统方法的一些瓶颈"></a>传统方法的一些瓶颈</h1><p>目前，针对结构化道路场景下的路径规划方法基本都是先采样，获得一系列路径；然后再计算每条采样的得到的路径的代价，比如距离障碍物的距离，heading变化率等； 最后选择一个代价最小的路径。 这种方法有很多弊端：</p><ul><li><strong>对环境的信息利用不够充分</strong>。</li><li><strong>采样路径不够智能</strong>。</li><li><strong>轨迹质量评估不够智能</strong>。</li></ul><h1 id="新方法和新思路"><a href="#新方法和新思路" class="headerlink" title="新方法和新思路"></a>新方法和新思路</h1><h2 id="基于逆向强化学习的轨迹评估函数"><a href="#基于逆向强化学习的轨迹评估函数" class="headerlink" title="基于逆向强化学习的轨迹评估函数"></a>基于逆向强化学习的轨迹评估函数</h2><p>基于data-drive的方法，生成一套更优的轨迹评价体系。</p><h2 id="基于GAN的状态空间采样"><a href="#基于GAN的状态空间采样" class="headerlink" title="基于GAN的状态空间采样"></a>基于GAN的状态空间采样</h2><p>基于data-drive的方法，生成一套更优的采样系统。</p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="基于深度强化学习open-space-planner"><a href="#基于深度强化学习open-space-planner" class="headerlink" title="基于深度强化学习open space planner"></a>基于深度强化学习open space planner</h2><ul><li>参考资料：<ul><li><a href="https://zhuanlan.zhihu.com/p/79712897" target="_blank" rel="noopener">动态环境下基于DRL的无人车自适应路径规划方法</a></li><li><a href="https://github.com/RGring/drl_local_planner_ros_stable_baselines" target="_blank" rel="noopener">Applying Deep Reinforcement Learning in the Navigation of Mobile Robots in Static and Dynamic Environments</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> auto-driving </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Blog Planning</title>
      <link href="/posts/2defdda0/"/>
      <url>/posts/2defdda0/</url>
      
        <content type="html"><![CDATA[<h1 id="Blog-Planning"><a href="#Blog-Planning" class="headerlink" title="Blog Planning"></a>Blog Planning</h1><h2 id="C-Plus-Plus"><a href="#C-Plus-Plus" class="headerlink" title="C Plus Plus"></a>C Plus Plus</h2><ul><li><input disabled="" type="checkbox"> <p>C++基础核心汇总：<br><img src="../img/blog_planning/blog_planning_2020-04-23-13-57-43.png" alt=""></p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/wuye9036/CppTemplateTutorial" target="_blank" rel="noopener">CppTemplateTutorial</a> : 中文的C++ Template的教学指南。与知名书籍C++ Templates不同，该系列教程将C++ Templates作为一门图灵完备的语言来讲授，以求帮助读者对Meta-Programming融会贯通。</p></li><li><input disabled="" type="checkbox"> <p><a href="https://refactoringguru.cn/design-patterns" target="_blank" rel="noopener">设计模式</a></p></li><li><input disabled="" type="checkbox"> <p><strong>C++复习计划</strong>： 先把C++基础核心汇总上的内容基本复习一遍，然后把《C++反汇编与逆向分析技术揭秘》看一遍，了解C++底层原理。然后翻译<a href="https://github.com/wuye9036/CppTemplateTutorial" target="_blank" rel="noopener">CppTemplateTutorial</a>，学习模板相关知识。然后过一遍<a href="https://refactoringguru.cn/design-patterns" target="_blank" rel="noopener">设计模式</a>， 然后开始看《C++设计新思维：泛型编程与设计模式之应用》，结合<a href="https://github.com/lokicui/loki" target="_blank" rel="noopener">loki</a>。结合之前从线性代数、数值优化和凸优化学习到的数学算法，构建一个类似数学算法库，以<a href="https://github.com/TheLartians/ModernCppStarter" target="_blank" rel="noopener">ModernCppStarter</a>为工程模板。</p></li><li><input disabled="" type="checkbox"> <p><strong>操作系统复现</strong></p><ul><li><input disabled="" type="checkbox"> JamesM’s kernel development tutorials<br>Roll your own toy UNIX-clone OS. <a href="http://www.jamesmolloy.co.uk/tutorial_html/" target="_blank" rel="noopener">英文原版</a>,<a href="https://github.com/hurley25/hurlex-doc" target="_blank" rel="noopener">中文版</a>,<a href="https://github.com/hurley25/Hurlex-II" target="_blank" rel="noopener">源码</a></li></ul></li></ul><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://github.com/yzhu798/CodingInterviewsNotes" target="_blank" rel="noopener">CodingInterviewsNotes</a></li></ul><h2 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h2><ul><li><input disabled="" type="checkbox"> <p><a href="https://github.com/scutan90/DeepLearning-500-questions" target="_blank" rel="noopener">DeepLearning-500-questions</a>: 深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。</p></li><li><p>Generative Adversarial Networks – 路径生成，速度曲线生成， 轨迹生成（路径和速度曲线直接生成）</p><ul><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/58812258" target="_blank" rel="noopener">GAN万字长文综述</a></li><li><input disabled="" type="checkbox"> <a href="https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/2001.06937.pdf">A review on Generative Adversarial Networks: Algorithms, Theory, and Applications</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/eriklindernoren/PyTorch-GAN" target="_blank" rel="noopener">PyTorch-GAN</a>: 各种GAN的pytorch实现。</li></ul></li><li><p>Deep Reinforcement Learning – corner case自主解决，逆向强化学习评价驾驶行为等。</p><ul><li><input disabled="" type="checkbox"> <a href="https://spinningup.openai.com/en/latest/user/introduction.html" target="_blank" rel="noopener">OpenAI Spinning Up</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/50213913" target="_blank" rel="noopener">OpenAI Spinning Up中文笔记</a></li><li><input disabled="" type="checkbox"> <a href="https://arxiv.org/abs/1906.10025" target="_blank" rel="noopener">Modern Deep Reinforcement Learning Algorithms</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/37690204" target="_blank" rel="noopener">强化学习入门——从原理到实践: Davi silver课程笔记</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/thu-ml/tianshou" target="_blank" rel="noopener">Tianshou</a>: 各种强化学习算法的pytorch实现。</li></ul></li><li><p>Recurrent Neural Networks/ LSTM – 时序数据特征抽取</p><ul><li><input disabled="" type="checkbox"> <a href="https://arxiv.org/abs/1506.00019" target="_blank" rel="noopener">A Critical Review of Recurrent Neural Networks for Sequence Learning</a></li></ul></li></ul><h2 id="数学基础系列"><a href="#数学基础系列" class="headerlink" title="数学基础系列"></a>数学基础系列</h2><ul><li><input disabled="" type="checkbox"> 程序员的线性代数</li><li><input disabled="" type="checkbox"> 数值分析 python<ul><li>Books:<ul><li><em>Scientific Computing An Introductory Survey</em> by Michael T. Heath, the author of <strong>pandas</strong></li><li><em>Numerical Methods in Engineering with Python 3</em> by Jaan Kiusalaas</li><li><em>Numerical recipes: the art of scientific computing</em> byWilliam H. Press. C++ </li></ul></li><li>Videos: <ul><li><a href="https://relate.cs.illinois.edu/course/cs450-f18/" target="_blank" rel="noopener">https://relate.cs.illinois.edu/course/cs450-f18/</a></li><li><a href="https://video.ethz.ch/lectures/d-math/2016/autumn/401-0663-00L.html" target="_blank" rel="noopener">ETH Numerical Methods for CSE</a></li></ul></li></ul></li><li><input disabled="" type="checkbox"> 运筹学： B站李丽娟的考研视频</li><li><input disabled="" type="checkbox"> 凸优化： Stephen Boyd的视频课</li><li><input disabled="" type="checkbox"> 复现OSQP：<ul><li><a href="https://web.stanford.edu/~boyd/papers/pdf/osqp.pdf" target="_blank" rel="noopener">OSQP 原始论文</a></li><li><a href="https://github.com/skleff1994/osqp" target="_blank" rel="noopener">OSQP solver python版复现</a></li><li><a href="https://github.com/oxfordcontrol/osqpth" target="_blank" rel="noopener">OSQP solver pytorch版复现</a></li></ul></li></ul><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><ul><li><input disabled="" type="checkbox"> 常用插件系列</li><li><input disabled="" type="checkbox"> 使用技巧系列</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建和自动化部署</title>
      <link href="/posts/96b0a1fd/"/>
      <url>/posts/96b0a1fd/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客搭建和自动化部署"><a href="#Hexo博客搭建和自动化部署" class="headerlink" title="Hexo博客搭建和自动化部署"></a>Hexo博客搭建和自动化部署</h1><p><img src="../../img/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2_2020-03-17-14-10-37.png" alt=""><br>Hexo 是一款快速、简洁且高效的博客框架.</p><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li>hexo-asset-image<ul><li>解决问题： hexo博客图片的问题在于，markdown文章使用的图片路径和hexo博客发布时的图片路径不一致。通常我们使用markdown书写博客时, 采用的方式是使用 <img src="" alt=""> 格式插入图片，我们希望在生成博客时，可以将图片转换成正确的格式。</li><li>安装： <code>npm install https://github.com/7ym0n/hexo-asset-image --sa</code></li><li>配置：只需要在<code>_config.yml</code> 中配置 <code>post_asset_folder</code> 为 <code>true</code> 即可。</li></ul></li><li>abbrlink<ul><li>解决问题： 解决hexo博客链接很长的问题。</li></ul></li></ul><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><ul><li><a href="https://colorhunt.co/" target="_blank" rel="noopener">网站配色</a>: 漂亮炫酷的配色网站</li></ul><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><a href="https://siriusq.top/Hexo-Next-7-7-%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html" target="_blank" rel="noopener">双语bolg</a>: 添加中英文切换按钮</li></ul><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><ul><li><a href="https://github.com/yezihack/github-webhook" target="_blank" rel="noopener">github 和服务器同步博客文件工具及教程</a></li><li><a href="http://www.jetchen.cn/github-webhooks/" target="_blank" rel="noopener">webhook 部署hexo</a></li><li><a href="https://www.cnblogs.com/linagcheng/p/13291786.html" target="_blank" rel="noopener">ubuntu 自启服务</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
